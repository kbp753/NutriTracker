{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nexport const TokenProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [csrfToken, setCsrfToken] = useState('');\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        const response = await axios.get('/api/csrf-token');\n        setCsrfToken(response.data.token);\n      } catch (error) {\n        console.error('Failed to fetch CSRF token', error);\n      }\n    };\n    fetchCsrfToken();\n  }, []);\n  const logout = () => {\n    setIsLoggedIn(false);\n    setToken(null);\n  };\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.get('http://localhost:8080/api/login', {\n        headers: {\n          Authorization: newToken\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        setUserId(userName);\n        setToken(newToken);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n      newToken = null;\n    }\n    return newToken;\n  };\n  const searchByFoodName = async foodName => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/search', {\n        params: {\n          foodName: foodName\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('search failed:', error);\n      return 0;\n    }\n  };\n  const getFoodNutritionDetails = async food => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/searchFoodNutrientById', {\n        params: {\n          fdcId: food.fdcId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting details failed:', error);\n      return 0;\n    }\n  };\n  const logFoodNutritionDetails = async logEntry => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/daily-intake', {\n        params: {\n          dailyIntake: logEntry\n        },\n        headers: {\n          'X-CSRF-TOKEN': csrfToken,\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      login,\n      isLoggedIn,\n      setIsLoggedIn,\n      logout,\n      searchByFoodName,\n      getFoodNutritionDetails,\n      userId,\n      logFoodNutritionDetails\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"EhPv7pN7nL5OVbTUtg04hro7FLA=\");\n_c = TokenProvider;\nexport default TokenContext;\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","TokenContext","TokenProvider","children","_s","isLoggedIn","setIsLoggedIn","token","setToken","userId","setUserId","csrfToken","setCsrfToken","fetchCsrfToken","response","get","data","error","console","logout","login","userName","password","newToken","window","btoa","headers","Authorization","log","status","searchByFoodName","foodName","params","getFoodNutritionDetails","food","fdcId","logFoodNutritionDetails","logEntry","post","dailyIntake","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TokenContext = createContext();\n\nexport const TokenProvider = ({ children }) => {\n  const [isLoggedIn,setIsLoggedIn]=useState(false)\n  const [token, setToken] = useState(null);\n  const [userId,setUserId]=useState(null);\n  const [csrfToken, setCsrfToken] = useState('');\n\n  useEffect( () => {\n    const fetchCsrfToken = async () => {\n        try {\n            const response = await axios.get('/api/csrf-token');\n            setCsrfToken(response.data.token);\n        } catch (error) {\n            console.error('Failed to fetch CSRF token', error);\n        }\n    };\n    fetchCsrfToken();\n  }, []);\n\n  const logout=() =>{\n    setIsLoggedIn(false)\n    setToken(null)\n  }\n\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.get('http://localhost:8080/api/login', {\n        headers: {\n          Authorization: newToken\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        setUserId(userName)\n        setToken(newToken);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n      newToken=null\n    }\n    return newToken;\n  };\n\n  const searchByFoodName = async (foodName) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/search', {\n        params: {\n          foodName: foodName\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('search failed:', error);\n      return 0;\n    }\n  };\n\n  const getFoodNutritionDetails = async (food) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/searchFoodNutrientById', {\n        params: {\n          fdcId: food.fdcId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting details failed:', error);\n      return 0;\n    }\n  };\n\n  const logFoodNutritionDetails = async (logEntry) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/daily-intake', {\n        params: {\n          dailyIntake: logEntry\n        },\n        headers: {\n          'X-CSRF-TOKEN': csrfToken,\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n  return (\n    <TokenContext.Provider value={{token, login, isLoggedIn, setIsLoggedIn, logout, searchByFoodName, getFoodNutritionDetails, userId, logFoodNutritionDetails }}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n\nexport default TokenContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}