{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/home/TodayLog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Table, Button, ButtonGroup } from 'react-bootstrap';\nimport { BsArrowLeft, BsArrowRight } from 'react-icons/bs'; // Example icons for date navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayLog = ({\n  foodEntries,\n  onAddFood\n}) => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const handleUpdate = index => {\n    // Dummy update function\n    alert(`Update functionality for index ${index}`);\n  };\n  const handleDelete = index => {\n    // Dummy delete function\n    alert(`Delete functionality for index ${index}`);\n  };\n  const isToday = date => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n  const handleDateChange = direction => {\n    const newDate = new Date(currentDate);\n    if (direction === 'prev') {\n      newDate.setDate(currentDate.getDate() - 1);\n    } else if (direction === 'next') {\n      newDate.setDate(currentDate.getDate() + 1);\n    }\n    setCurrentDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      style: {\n        backgroundColor: '#e6ffe6',\n        color: '#006400',\n        fontWeight: 'bold',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: \"mb-2\",\n        style: {\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: () => handleDateChange('prev'),\n          children: /*#__PURE__*/_jsxDEV(BsArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: currentDate.toDateString() === new Date().toDateString() ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this) : currentDate.getDate() === new Date().getDate() - 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Yesterday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: currentDate.toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: () => handleDateChange('next'),\n          disabled: isToday(currentDate),\n          children: /*#__PURE__*/_jsxDEV(BsArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '200px'\n              },\n              children: \"Food Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '150px'\n              },\n              children: \"Serving Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: '150px'\n              },\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: foodEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                size: \"sm\",\n                className: \"me-2\",\n                onClick: () => handleUpdate(index),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-danger\",\n                size: \"sm\",\n                onClick: () => handleDelete(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: onAddFood,\n        className: \"mt-3\",\n        children: \"Add Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(TodayLog, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = TodayLog;\nexport default TodayLog;\nvar _c;\n$RefreshReg$(_c, \"TodayLog\");","map":{"version":3,"names":["React","useState","Card","Table","Button","ButtonGroup","BsArrowLeft","BsArrowRight","jsxDEV","_jsxDEV","TodayLog","foodEntries","onAddFood","_s","currentDate","setCurrentDate","Date","handleUpdate","index","alert","handleDelete","isToday","date","today","getDate","getMonth","getFullYear","handleDateChange","direction","newDate","setDate","className","children","Header","style","backgroundColor","color","fontWeight","display","justifyContent","alignItems","gap","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toDateString","disabled","Body","striped","bordered","hover","responsive","minWidth","map","entry","size","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/home/TodayLog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Table, Button, ButtonGroup } from 'react-bootstrap';\nimport { BsArrowLeft, BsArrowRight } from 'react-icons/bs'; // Example icons for date navigation\n\nconst TodayLog = ({ foodEntries, onAddFood }) => {\n    const [currentDate, setCurrentDate] = useState(new Date());\n\n    const handleUpdate = (index) => {\n        // Dummy update function\n        alert(`Update functionality for index ${index}`);\n    };\n\n    const handleDelete = (index) => {\n        // Dummy delete function\n        alert(`Delete functionality for index ${index}`);\n    };\n\n    const isToday = (date) => {\n        const today = new Date();\n        return date.getDate() === today.getDate() &&\n               date.getMonth() === today.getMonth() &&\n               date.getFullYear() === today.getFullYear();\n    };\n\n    const handleDateChange = (direction) => {\n        const newDate = new Date(currentDate);\n        if (direction === 'prev') {\n            newDate.setDate(currentDate.getDate() - 1);\n        } else if (direction === 'next') {\n            newDate.setDate(currentDate.getDate() + 1);\n        }\n        setCurrentDate(newDate);\n    };\n\n    return (\n        <Card className=\"mb-4\">\n            <Card.Header style={{ backgroundColor: '#e6ffe6', color: '#006400', fontWeight: 'bold', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <ButtonGroup className=\"mb-2\" style={{ gap: '10px' }}>\n                    <Button variant=\"outline-secondary\" onClick={() => handleDateChange('prev')} >\n                        <BsArrowLeft />\n                    </Button>\n                    <div>\n                        {currentDate.toDateString() === new Date().toDateString() ? (\n                            <span>Today</span>\n                        ) : currentDate.getDate() === new Date().getDate() - 1 ? (\n                            <span>Yesterday</span>\n                        ) : (\n                            <span>{currentDate.toDateString()}</span>\n                        )}\n                    </div>\n                    <Button variant=\"outline-secondary\" onClick={() => handleDateChange('next')} disabled={isToday(currentDate)}>\n                        <BsArrowRight />\n                    </Button>\n                </ButtonGroup>\n            </Card.Header>\n            <Card.Body>\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th style={{ minWidth: '200px' }}>Food Name</th>\n                            <th style={{ minWidth: '150px' }}>Serving Size</th>\n                            <th style={{ minWidth: '150px' }}>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {foodEntries.map((entry, index) => (\n                            <tr key={index}>\n                                <td>{entry[0]}</td>\n                                <td>{entry[1]}</td>\n                                <td>\n                                    <Button variant=\"outline-primary\" size=\"sm\" className=\"me-2\" onClick={() => handleUpdate(index)}>\n                                        Update\n                                    </Button>\n                                    <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDelete(index)}>\n                                        Delete\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <Button variant=\"primary\" onClick={onAddFood} className=\"mt-3\">\n                    Add Food\n                </Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default TodayLog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}