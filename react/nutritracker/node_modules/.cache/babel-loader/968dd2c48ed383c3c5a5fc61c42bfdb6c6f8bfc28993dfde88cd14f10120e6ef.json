{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/home/Search.js\",\n  _s = $RefreshSig$();\n// pages/Search.js\nimport React, { useState } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport SearchBar from '../components/SearchBar';\nimport SearchResults from '../components/SearchResults';\nimport FoodDetails from '../components/FoodDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onAddFood\n}) => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const handleSearch = async term => {\n    // Simulate a search API call\n    const results = await fakeSearchApi(term);\n    setSearchResults(results);\n  };\n  const handleSelectResult = result => {\n    setSelectedFood(result);\n    setSearchResults([]);\n  };\n  const handleAddFood = food => {\n    onAddFood(food);\n    setSelectedFood(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(SearchResults, {\n      results: searchResults,\n      onSelect: handleSelectResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), selectedFood && /*#__PURE__*/_jsxDEV(FoodDetails, {\n      foodItem: selectedFood,\n      onAdd: handleAddFood\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: () => window.history.back(),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n// Fake search API function\n_s(Search, \"pPkzQLbI0yXY+mlkedi86bRT2ME=\");\n_c = Search;\nconst fakeSearchApi = async term => {\n  const allFoods = [{\n    name: 'Apple',\n    calories: 95,\n    servingSize: 1,\n    servingType: 'piece'\n  }, {\n    name: 'Banana',\n    calories: 105,\n    servingSize: 1,\n    servingType: 'piece'\n  }, {\n    name: 'Chicken Breast',\n    calories: 165,\n    servingSize: 100,\n    servingType: 'g'\n  }, {\n    name: 'Salad',\n    calories: 150,\n    servingSize: 100,\n    servingType: 'g'\n  }\n  // Add more food items for realistic search results\n  ];\n  return allFoods.filter(food => food.name.toLowerCase().includes(term.toLowerCase()));\n};\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Container","Button","SearchBar","SearchResults","FoodDetails","jsxDEV","_jsxDEV","Search","onAddFood","_s","searchResults","setSearchResults","selectedFood","setSelectedFood","handleSearch","term","results","fakeSearchApi","handleSelectResult","result","handleAddFood","food","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","length","onSelect","foodItem","onAdd","variant","onClick","window","history","back","_c","allFoods","name","calories","servingSize","servingType","filter","toLowerCase","includes","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/home/Search.js"],"sourcesContent":["// pages/Search.js\nimport React, { useState } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport SearchBar from '../components/SearchBar';\nimport SearchResults from '../components/SearchResults';\nimport FoodDetails from '../components/FoodDetails';\n\nconst Search = ({ onAddFood }) => {\n    const [searchResults, setSearchResults] = useState([]);\n    const [selectedFood, setSelectedFood] = useState(null);\n\n    const handleSearch = async (term) => {\n        // Simulate a search API call\n        const results = await fakeSearchApi(term);\n        setSearchResults(results);\n    };\n\n    const handleSelectResult = (result) => {\n        setSelectedFood(result);\n        setSearchResults([]);\n    };\n\n    const handleAddFood = (food) => {\n        onAddFood(food);\n        setSelectedFood(null);\n    };\n\n    return (\n        <Container>\n            <h3>Search Food</h3>\n            <SearchBar onSearch={handleSearch} />\n            {searchResults.length > 0 && (\n                <SearchResults results={searchResults} onSelect={handleSelectResult} />\n            )}\n            {selectedFood && (\n                <FoodDetails foodItem={selectedFood} onAdd={handleAddFood} />\n            )}\n            <Button variant=\"secondary\" onClick={() => window.history.back()}>Back</Button>\n        </Container>\n    );\n};\n\n// Fake search API function\nconst fakeSearchApi = async (term) => {\n    const allFoods = [\n        { name: 'Apple', calories: 95, servingSize: 1, servingType: 'piece' },\n        { name: 'Banana', calories: 105, servingSize: 1, servingType: 'piece' },\n        { name: 'Chicken Breast', calories: 165, servingSize: 100, servingType: 'g' },\n        { name: 'Salad', calories: 150, servingSize: 100, servingType: 'g' },\n        // Add more food items for realistic search results\n    ];\n    return allFoods.filter(food => food.name.toLowerCase().includes(term.toLowerCase()));\n};\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}