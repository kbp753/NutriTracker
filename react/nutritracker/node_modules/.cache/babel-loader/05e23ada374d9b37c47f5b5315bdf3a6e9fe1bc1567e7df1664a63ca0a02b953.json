{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/home/FoodLog.js\",\n  _s = $RefreshSig$();\n// components/FoodLog.js\nimport React, { useState } from 'react';\nimport { Button, ListGroup, FormControl, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodLog = ({\n  foodEntries\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = async term => {\n    setSearchTerm(term);\n    if (term.length > 2) {\n      // Simulate a search API call\n      const results = await fakeSearchApi(term);\n      setSearchResults(results);\n    } else {\n      setSearchResults([]);\n    }\n  };\n  const handleSelectResult = result => {\n    // Handle adding the selected food to the food log\n    console.log('Selected result:', result);\n    setSearchTerm('');\n    setSearchResults([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Food Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"Search for food\",\n        value: searchTerm,\n        onChange: e => handleSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Add New Meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"mb-3\",\n      children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        action: true,\n        onClick: () => handleSelectResult(result),\n        children: [result.name, \" - \", result.calories, \" kcal\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: foodEntries.map((entry, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [entry.name, \": \", entry.calories, \" kcal\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n// Fake search API function\n_s(FoodLog, \"brRzk7tj+pGuNPv2srA2r/nQjm0=\");\n_c = FoodLog;\nconst fakeSearchApi = async term => {\n  const allFoods = [{\n    name: 'Apple',\n    calories: 95\n  }, {\n    name: 'Banana',\n    calories: 105\n  }, {\n    name: 'Chicken Breast',\n    calories: 165\n  }, {\n    name: 'Salad',\n    calories: 150\n  }\n  // Add more food items for realistic search results\n  ];\n  return allFoods.filter(food => food.name.toLowerCase().includes(term.toLowerCase()));\n};\nexport default FoodLog;\nvar _c;\n$RefreshReg$(_c, \"FoodLog\");","map":{"version":3,"names":["React","useState","Button","ListGroup","FormControl","InputGroup","jsxDEV","_jsxDEV","FoodLog","foodEntries","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","handleSearch","term","length","results","fakeSearchApi","handleSelectResult","result","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","Append","variant","map","index","Item","action","onClick","name","calories","entry","_c","allFoods","filter","food","toLowerCase","includes","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/home/FoodLog.js"],"sourcesContent":["// components/FoodLog.js\nimport React, { useState } from 'react';\nimport { Button, ListGroup, FormControl, InputGroup } from 'react-bootstrap';\n\nconst FoodLog = ({ foodEntries }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleSearch = async (term) => {\n        setSearchTerm(term);\n        if (term.length > 2) {\n            // Simulate a search API call\n            const results = await fakeSearchApi(term);\n            setSearchResults(results);\n        } else {\n            setSearchResults([]);\n        }\n    };\n\n    const handleSelectResult = (result) => {\n        // Handle adding the selected food to the food log\n        console.log('Selected result:', result);\n        setSearchTerm('');\n        setSearchResults([]);\n    };\n\n    return (\n        <div className=\"mt-4\">\n            <h3>Food Log</h3>\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                    placeholder=\"Search for food\"\n                    value={searchTerm}\n                    onChange={(e) => handleSearch(e.target.value)}\n                />\n                <InputGroup.Append>\n                    <Button variant=\"primary\">Add New Meal</Button>\n                </InputGroup.Append>\n            </InputGroup>\n            {searchResults.length > 0 && (\n                <ListGroup className=\"mb-3\">\n                    {searchResults.map((result, index) => (\n                        <ListGroup.Item\n                            key={index}\n                            action\n                            onClick={() => handleSelectResult(result)}\n                        >\n                            {result.name} - {result.calories} kcal\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            )}\n            <ListGroup>\n                {foodEntries.map((entry, index) => (\n                    <ListGroup.Item key={index}>{entry.name}: {entry.calories} kcal</ListGroup.Item>\n                ))}\n            </ListGroup>\n        </div>\n    );\n};\n\n// Fake search API function\nconst fakeSearchApi = async (term) => {\n    const allFoods = [\n        { name: 'Apple', calories: 95 },\n        { name: 'Banana', calories: 105 },\n        { name: 'Chicken Breast', calories: 165 },\n        { name: 'Salad', calories: 150 },\n        // Add more food items for realistic search results\n    ];\n    return allFoods.filter(food => food.name.toLowerCase().includes(term.toLowerCase()));\n};\n\nexport default FoodLog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}