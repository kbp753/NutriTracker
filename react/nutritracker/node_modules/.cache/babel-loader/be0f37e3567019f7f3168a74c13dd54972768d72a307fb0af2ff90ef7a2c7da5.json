{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nexport const TokenProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  const login = async (userName, password) => {\n    const token = \"Basic \" + window.btoa(userName + ':' + password);\n    setToken(token);\n    try {\n      const response = await axios.get('http://localhost:8080/api/login', {\n        headers: {\n          Authorization: token\n        }\n      });\n      // Handle response as needed\n      console.log('Login successful:', response.data);\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      setToken,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n_c = TokenProvider;\nexport default TokenContext;\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","TokenContext","TokenProvider","children","_s","token","setToken","login","userName","password","window","btoa","response","get","headers","Authorization","console","log","data","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\nconst TokenContext = createContext();\n\nexport const TokenProvider = ({ children }) => {\n  const [token, setToken] = useState(null);\n\n  const login = async (userName, password) => {\n    const token = \"Basic \" + window.btoa(userName + ':' + password);\n    setToken(token);\n    try {\n      const response = await axios.get('http://localhost:8080/api/login', {\n        headers: {\n          Authorization: token\n        }\n      });\n      // Handle response as needed\n      console.log('Login successful:', response.data);\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n    }\n  };\n\n  return (\n    <TokenContext.Provider value={{ token, setToken, login }}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n\nexport default TokenContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,MAAMJ,KAAK,GAAG,QAAQ,GAAGK,MAAM,CAACC,IAAI,CAACH,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC;IAC/DH,QAAQ,CAACD,KAAK,CAAC;IACf,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,EAAE;QAClEC,OAAO,EAAE;UACPC,aAAa,EAAEV;QACjB;MACF,CAAC,CAAC;MACF;MACAW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,QAAQ,CAACM,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEN,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEC,QAAQ;MAAEC;IAAM,CAAE;IAAAJ,QAAA,EACtDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,EAAA,CAzBWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA2B1B,eAAeD,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}