{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nexport const TokenProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn'));\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [userId, setUserId] = useState(localStorage.getItem('userId'));\n  const [loggedInUserName, setLoggedInUsername] = useState(localStorage.getItem('loggedInUserName'));\n\n  // const [isLoggedIn,setIsLoggedIn]=useState(false)\n  // const [token, setToken] = useState(null);\n  // const [userId,setUserId]=useState(null);\n  // const [loggedInUserName, setLoggedInUsername]=useState(null);\n  // const [csrfToken, setCsrfToken] = useState('');\n\n  // useEffect(() => {\n  //   axios.get('http://localhost:8080/api/csrf/getCsrfToken').then(response => {\n  //     setCsrfToken(response.data.token);\n  //     console.log(\"csrf->\",response)\n  //   });\n  // }, []);\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    setToken(null);\n    setUserId(null);\n    setLoggedInUsername(null);\n    localStorage.setItem('isLoggedIn', false);\n    localStorage.setItem('token', null);\n    localStorage.setItem('userId', null);\n    localStorage.setItem('loggedInUserName', null);\n  };\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.post('http://localhost:8080/login', new URLSearchParams({\n        username: userName,\n        password: password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        setIsLoggedIn(true);\n        setToken(newToken);\n        setLoggedInUsername(userName);\n        setUserId(response.data.userId);\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('loggedInUserName', userName);\n        localStorage.setItem('userId', response.data.userId);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      newToken = null;\n    }\n    return newToken;\n  };\n  const searchByFoodName = async foodName => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/search', {\n        params: {\n          foodName: foodName,\n          userId: userId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('search failed:', error);\n      return 0;\n    }\n  };\n  const getFoodNutritionDetails = async food => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/searchFoodNutrientById', {\n        params: {\n          fdcId: food.fdcId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting details failed:', error);\n      return 0;\n    }\n  };\n  const logFoodNutritionDetails = async logEntry => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/dailyIntake/create', logEntry, {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n  const getNutritionLogByDate = async date => {\n    try {\n      console.log(\"requested date-> \", date);\n      const response = await axios.get('http://localhost:8080/api/dailyIntake/getLog', {\n        params: {\n          userId: userId,\n          date: date\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('getting nutrition log details failed:', error);\n      return null;\n    }\n  };\n  const getFoodByDate = async date => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/dailyIntake/getFoodByDate', {\n        params: {\n          userId: localStorage.getItem(\"userId\"),\n          date: date\n        },\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('getting Food log details failed:', error);\n      return null;\n    }\n  };\n  const deleteLogById = async intakeId => {\n    try {\n      const response = await axios.delete('http://localhost:8080/api/dailyIntake/deleteLog', {\n        params: {\n          intakeId: intakeId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('deleting Food log details failed:', error);\n      return null;\n    }\n  };\n  const updateLogById = async (intakeId, quantity, updateProportion) => {\n    try {\n      console.log(\"intakeId \", intakeId, \"quantity \", quantity, \"updated proportion \", updateProportion);\n      const response = await axios.post('http://localhost:8080/api/dailyIntake/updateLog', {\n        intakeId: intakeId,\n        quantity: quantity,\n        updateProportion: updateProportion\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('Updating Food log details failed:', error);\n      return null;\n    }\n  };\n  const getAvailableNutrients = async query => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/getAllNutrients', {\n        params: {\n          searchTerm: query\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('deleting Food log details failed:', error);\n      return null;\n    }\n  };\n  const addCustomFood = async newFood => {\n    try {\n      newFood.userId = parseInt(userId);\n      console.log(\"new food-> \", newFood);\n      const response = await axios.post('http://localhost:8080/api/foods/addCustomFood', newFood, {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      login,\n      logout,\n      isLoggedIn,\n      searchByFoodName,\n      getFoodNutritionDetails,\n      logFoodNutritionDetails,\n      getNutritionLogByDate,\n      getFoodByDate,\n      deleteLogById,\n      updateLogById,\n      getAvailableNutrients,\n      addCustomFood\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"MsLVKvb7XqI7LiVs+UIVk3ZQrbA=\");\n_c = TokenProvider;\nexport default TokenContext;\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","jsxDEV","_jsxDEV","TokenContext","TokenProvider","children","_s","isLoggedIn","setIsLoggedIn","localStorage","getItem","token","setToken","userId","setUserId","loggedInUserName","setLoggedInUsername","logout","setItem","login","userName","password","newToken","window","btoa","response","post","URLSearchParams","username","headers","console","log","status","data","error","searchByFoodName","foodName","get","params","Authorization","getFoodNutritionDetails","food","fdcId","logFoodNutritionDetails","logEntry","getNutritionLogByDate","date","getFoodByDate","deleteLogById","intakeId","delete","updateLogById","quantity","updateProportion","getAvailableNutrients","query","searchTerm","addCustomFood","newFood","parseInt","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios';\n\nconst TokenContext = createContext();\n\nexport const TokenProvider = ({ children }) => {\n  const [isLoggedIn,setIsLoggedIn]=useState(localStorage.getItem('isLoggedIn'))\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [userId,setUserId]=useState(localStorage.getItem('userId'));\n  const [loggedInUserName, setLoggedInUsername]=useState(localStorage.getItem('loggedInUserName'));\n\n  // const [isLoggedIn,setIsLoggedIn]=useState(false)\n  // const [token, setToken] = useState(null);\n  // const [userId,setUserId]=useState(null);\n  // const [loggedInUserName, setLoggedInUsername]=useState(null);\n  // const [csrfToken, setCsrfToken] = useState('');\n\n  // useEffect(() => {\n  //   axios.get('http://localhost:8080/api/csrf/getCsrfToken').then(response => {\n  //     setCsrfToken(response.data.token);\n  //     console.log(\"csrf->\",response)\n  //   });\n  // }, []);\n\n\n  const logout=() =>{\n    setIsLoggedIn(false);\n    setToken(null)\n    setUserId(null)\n    setLoggedInUsername(null)\n    localStorage.setItem('isLoggedIn', false);\n    localStorage.setItem('token', null);\n    localStorage.setItem('userId', null);\n    localStorage.setItem('loggedInUserName', null);\n  }\n\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.post('http://localhost:8080/login', new URLSearchParams({\n        username: userName,\n        password: password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        setIsLoggedIn(true)\n        setToken(newToken)\n        setLoggedInUsername(userName)\n        setUserId(response.data.userId)\n        localStorage.setItem('token', newToken);\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('loggedInUserName', userName);\n        localStorage.setItem('userId', response.data.userId);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      newToken=null\n    }\n    return newToken;\n  };\n\n  const searchByFoodName = async (foodName) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/search', {\n        params: {\n          foodName: foodName,\n          userId: userId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('search failed:', error);\n      return 0;\n    }\n  };\n\n  const getFoodNutritionDetails = async (food) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/searchFoodNutrientById', {\n        params: {\n          fdcId: food.fdcId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting details failed:', error);\n      return 0;\n    }\n  };\n\n  const logFoodNutritionDetails = async (logEntry) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/dailyIntake/create',\n        logEntry\n      , {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n\n\n  const getNutritionLogByDate = async (date) => {\n    try {\n      console.log(\"requested date-> \",date)\n      const response = await axios.get('http://localhost:8080/api/dailyIntake/getLog', {\n        params: {\n          userId: userId,\n          date:date\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n      else{\n        return null;\n      }\n    } catch (error) {\n      console.error('getting nutrition log details failed:', error);\n      return null;\n    }\n  };\n\n  const getFoodByDate = async (date) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/dailyIntake/getFoodByDate', {\n        params: {\n          userId: localStorage.getItem(\"userId\"),\n          date:date\n        },\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n      else{\n        return null;\n      }\n    } catch (error) {\n      console.error('getting Food log details failed:', error);\n      return null;\n    }\n  };\n\n  const deleteLogById = async (intakeId) => {\n    try {\n      const response = await axios.delete('http://localhost:8080/api/dailyIntake/deleteLog', {\n        params: {\n          intakeId:intakeId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n      else{\n        return null;\n      }\n    } catch (error) {\n      console.error('deleting Food log details failed:', error);\n      return null;\n    }\n  };\n\n  const updateLogById = async (intakeId, quantity, updateProportion) => {\n    try {\n      console.log(\"intakeId \",intakeId,\"quantity \",quantity, \"updated proportion \",updateProportion)\n      const response = await axios.post('http://localhost:8080/api/dailyIntake/updateLog', \n          {\n              intakeId: intakeId,\n              quantity: quantity,\n              updateProportion: updateProportion\n          },\n          {\n              headers: {\n                  Authorization: token\n              }\n          }\n      );\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n          return response;\n      } else {\n          return null;\n      }\n  } catch (error) {\n      console.error('Updating Food log details failed:', error);\n      return null;\n  }\n  \n  };\n\n  const getAvailableNutrients = async (query) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/getAllNutrients', { \n        params:{\n          searchTerm: query\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n      else{\n        return null;\n      }\n    } catch (error) {\n      console.error('deleting Food log details failed:', error);\n      return null;\n    }\n  };\n\n  const addCustomFood = async (newFood) => {\n    try {\n      newFood.userId=parseInt(userId);\n      console.log(\"new food-> \",newFood)\n      const response = await axios.post('http://localhost:8080/api/foods/addCustomFood',\n        newFood\n      , {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n\n\n  return (\n    <TokenContext.Provider value={{ login, logout, isLoggedIn, searchByFoodName, getFoodNutritionDetails, logFoodNutritionDetails, getNutritionLogByDate, getFoodByDate, deleteLogById, updateLogById, getAvailableNutrients, addCustomFood }}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n\nexport default TokenContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}