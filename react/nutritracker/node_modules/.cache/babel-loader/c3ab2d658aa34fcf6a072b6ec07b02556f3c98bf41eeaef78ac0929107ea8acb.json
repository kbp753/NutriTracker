{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nconst navigate = useNavigate();\nexport const TokenProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(null);\n  const logout = () => {\n    setIsLoggedIn(false);\n    setToken(null);\n    navigate('/');\n  };\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.get('http://localhost:8080/api/login', {\n        headers: {\n          Authorization: newToken\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        setToken(newToken);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n      newToken = null;\n    }\n    return newToken;\n  };\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      login,\n      isLoggedIn,\n      setIsLoggedIn,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"ev1PhiGTXjYjsB97UjXY3/RQwPM=\");\n_c = TokenProvider;\nexport default TokenContext;\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","useNavigate","jsxDEV","_jsxDEV","TokenContext","navigate","TokenProvider","children","_s","isLoggedIn","setIsLoggedIn","token","setToken","logout","login","userName","password","newToken","window","btoa","response","get","headers","Authorization","console","log","status","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst TokenContext = createContext();\nconst navigate = useNavigate();\n\nexport const TokenProvider = ({ children }) => {\n  const [isLoggedIn,setIsLoggedIn]=useState(false)\n  const [token, setToken] = useState(null);\n\n  const logout=() =>{\n    setIsLoggedIn(false)\n    setToken(null)\n    navigate('/')\n  }\n\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.get('http://localhost:8080/api/login', {\n        headers: {\n          Authorization: newToken\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        setToken(newToken);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n      newToken=null\n    }\n    return newToken;\n  };\n\n  return (\n    <TokenContext.Provider value={{token, login, isLoggedIn, setIsLoggedIn, logout }}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n\nexport default TokenContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AACpC,MAAMQ,QAAQ,GAAGJ,WAAW,CAAC,CAAC;AAE9B,OAAO,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAACC,aAAa,CAAC,GAACX,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,MAAM,GAACA,CAAA,KAAK;IAChBH,aAAa,CAAC,KAAK,CAAC;IACpBE,QAAQ,CAAC,IAAI,CAAC;IACdP,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMS,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAIC,QAAQ,GAAG,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,GAAG,GAAG,GAAGC,QAAQ,CAAC;IAChE,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,iCAAiC,EAAE;QAClEC,OAAO,EAAE;UACPC,aAAa,EAAEN;QACjB;MACF,CAAC,CAAC;MACFO,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEL,QAAQ,CAAC;MACjC,IAAIA,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAC3Bd,QAAQ,CAACK,QAAQ,CAAC;QAClBP,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChBK,QAAQ,GAAC,IAAI;IACf;IACA,OAAOA,QAAQ;EACjB,CAAC;EAED,oBACEd,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAClB,KAAK;MAAEG,KAAK;MAAEL,UAAU;MAAEC,aAAa;MAAEG;IAAO,CAAE;IAAAN,QAAA,EAC9EA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACzB,EAAA,CApCWF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAsC1B,eAAeF,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}