{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/custom_food/AddCustomFood.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Table, Badge } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCustomFood = () => {\n  _s();\n  const [foodName, setFoodName] = useState('');\n  const [nutrients, setNutrients] = useState([]);\n  const [availableNutrients, setAvailableNutrients] = useState([]);\n  const [filteredNutrients, setFilteredNutrients] = useState([]);\n  const [selectedNutrient, setSelectedNutrient] = useState('');\n  const [nutrientAmount, setNutrientAmount] = useState('');\n  const [errors, setErrors] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Simulating fetching nutrients from backend\n    fetchNutrientsFromBackend().then(data => {\n      setAvailableNutrients(data);\n      setFilteredNutrients(data); // Initialize filtered nutrients with all available nutrients\n    }).catch(error => console.error('Error fetching nutrients:', error));\n  }, []);\n\n  // Simulated function to fetch nutrients from backend\n  const fetchNutrientsFromBackend = () => {\n    // Replace with actual fetch logic to your backend API\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const mockNutrients = [{\n          id: 1,\n          name: 'Protein'\n        }, {\n          id: 2,\n          name: 'Carbohydrates'\n        }, {\n          id: 3,\n          name: 'Fat'\n        }, {\n          id: 4,\n          name: 'Fiber'\n        }\n        // Add more nutrients as needed\n        ];\n        resolve(mockNutrients);\n      }, 1000);\n    });\n  };\n  const handleAddNutrient = () => {\n    if (selectedNutrient && nutrientAmount) {\n      const newNutrient = {\n        name: selectedNutrient,\n        amount: nutrientAmount\n      };\n      setNutrients([...nutrients, newNutrient]);\n      setSelectedNutrient('');\n      setNutrientAmount('');\n      setSearchTerm(''); // Reset search term after adding nutrient\n    }\n  };\n  const handleRemoveNutrient = index => {\n    const updatedNutrients = [...nutrients];\n    updatedNutrients.splice(index, 1);\n    setNutrients(updatedNutrients);\n  };\n  const handleSaveFood = event => {\n    event.preventDefault(); // Prevent form submission\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length === 0) {\n      // Proceed with saving data or API call\n      const newFood = {\n        name: foodName,\n        nutrients: nutrients\n      };\n      console.log('Saving food:', newFood);\n      // Reset form after saving\n      setFoodName('');\n      setNutrients([]);\n      setSelectedNutrient('');\n      setNutrientAmount('');\n      setErrors({});\n    } else {\n      setErrors(formErrors);\n    }\n  };\n  const validateForm = () => {\n    let errors = {};\n    if (!foodName.trim()) {\n      errors.foodName = 'Food name is required';\n    }\n    if (nutrients.length === 0) {\n      errors.nutrients = 'At least one nutrient must be added';\n    }\n    return errors;\n  };\n  const handleNutrientSearch = event => {\n    const searchTerm = event.target.value;\n    setSearchTerm(searchTerm);\n    const filtered = availableNutrients.filter(nutrient => nutrient.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredNutrients(filtered);\n  };\n  const handleNutrientSelect = nutrientName => {\n    setSelectedNutrient(nutrientName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Add Custom Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSaveFood,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"foodName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Food Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter food name\",\n          value: foodName,\n          onChange: e => setFoodName(e.target.value),\n          isInvalid: !!errors.foodName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: errors.foodName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"nutrientSearch\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select Nutrient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Search for nutrient...\",\n          value: searchTerm,\n          onChange: handleNutrientSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), selectedNutrient && /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nutrient Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [filteredNutrients.map((nutrient, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: nutrient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"sm\",\n                placeholder: \"Enter amount\",\n                value: nutrient.amount || '',\n                onChange: e => {\n                  const updatedNutrients = [...nutrients];\n                  updatedNutrients[index].amount = e.target.value;\n                  setNutrients(updatedNutrients);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: () => handleRemoveNutrient(index),\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  pill: true,\n                  bg: \"danger\",\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: selectedNutrient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                size: \"sm\",\n                placeholder: \"Enter amount\",\n                value: nutrientAmount,\n                onChange: e => setNutrientAmount(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: handleAddNutrient,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"mt-3\",\n        children: \"Save Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCustomFood, \"Z7JwT80Nx6e9abfTRK4gve8aXF8=\");\n_c = AddCustomFood;\nexport default AddCustomFood;\nvar _c;\n$RefreshReg$(_c, \"AddCustomFood\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Table","Badge","jsxDEV","_jsxDEV","AddCustomFood","_s","foodName","setFoodName","nutrients","setNutrients","availableNutrients","setAvailableNutrients","filteredNutrients","setFilteredNutrients","selectedNutrient","setSelectedNutrient","nutrientAmount","setNutrientAmount","errors","setErrors","searchTerm","setSearchTerm","fetchNutrientsFromBackend","then","data","catch","error","console","Promise","resolve","reject","setTimeout","mockNutrients","id","name","handleAddNutrient","newNutrient","amount","handleRemoveNutrient","index","updatedNutrients","splice","handleSaveFood","event","preventDefault","formErrors","validateForm","Object","keys","length","newFood","log","trim","handleNutrientSearch","target","value","filtered","filter","nutrient","toLowerCase","includes","handleNutrientSelect","nutrientName","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","e","isInvalid","required","Feedback","striped","bordered","hover","map","size","variant","onClick","pill","bg","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/custom_food/AddCustomFood.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Table, Badge } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst AddCustomFood = () => {\n  const [foodName, setFoodName] = useState('');\n  const [nutrients, setNutrients] = useState([]);\n  const [availableNutrients, setAvailableNutrients] = useState([]);\n  const [filteredNutrients, setFilteredNutrients] = useState([]);\n  const [selectedNutrient, setSelectedNutrient] = useState('');\n  const [nutrientAmount, setNutrientAmount] = useState('');\n  const [errors, setErrors] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    // Simulating fetching nutrients from backend\n    fetchNutrientsFromBackend()\n      .then(data => {\n        setAvailableNutrients(data);\n        setFilteredNutrients(data); // Initialize filtered nutrients with all available nutrients\n      })\n      .catch(error => console.error('Error fetching nutrients:', error));\n  }, []);\n\n  // Simulated function to fetch nutrients from backend\n  const fetchNutrientsFromBackend = () => {\n    // Replace with actual fetch logic to your backend API\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const mockNutrients = [\n          { id: 1, name: 'Protein' },\n          { id: 2, name: 'Carbohydrates' },\n          { id: 3, name: 'Fat' },\n          { id: 4, name: 'Fiber' },\n          // Add more nutrients as needed\n        ];\n        resolve(mockNutrients);\n      }, 1000);\n    });\n  };\n\n  const handleAddNutrient = () => {\n    if (selectedNutrient && nutrientAmount) {\n      const newNutrient = { name: selectedNutrient, amount: nutrientAmount };\n      setNutrients([...nutrients, newNutrient]);\n      setSelectedNutrient('');\n      setNutrientAmount('');\n      setSearchTerm(''); // Reset search term after adding nutrient\n    }\n  };\n\n  const handleRemoveNutrient = (index) => {\n    const updatedNutrients = [...nutrients];\n    updatedNutrients.splice(index, 1);\n    setNutrients(updatedNutrients);\n  };\n\n  const handleSaveFood = (event) => {\n    event.preventDefault(); // Prevent form submission\n    const formErrors = validateForm();\n    if (Object.keys(formErrors).length === 0) {\n      // Proceed with saving data or API call\n      const newFood = {\n        name: foodName,\n        nutrients: nutrients\n      };\n      console.log('Saving food:', newFood);\n      // Reset form after saving\n      setFoodName('');\n      setNutrients([]);\n      setSelectedNutrient('');\n      setNutrientAmount('');\n      setErrors({});\n    } else {\n      setErrors(formErrors);\n    }\n  };\n\n  const validateForm = () => {\n    let errors = {};\n    if (!foodName.trim()) {\n      errors.foodName = 'Food name is required';\n    }\n    if (nutrients.length === 0) {\n      errors.nutrients = 'At least one nutrient must be added';\n    }\n    return errors;\n  };\n\n  const handleNutrientSearch = (event) => {\n    const searchTerm = event.target.value;\n    setSearchTerm(searchTerm);\n    const filtered = availableNutrients.filter(nutrient =>\n      nutrient.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredNutrients(filtered);\n  };\n\n  const handleNutrientSelect = (nutrientName) => {\n    setSelectedNutrient(nutrientName);\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h2 style={{ color: 'green' }}>Add Custom Food</h2>\n      <Form onSubmit={handleSaveFood}>\n        <Form.Group controlId=\"foodName\">\n          <Form.Label>Food Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter food name\"\n            value={foodName}\n            onChange={(e) => setFoodName(e.target.value)}\n            isInvalid={!!errors.foodName}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.foodName}\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"nutrientSearch\">\n          <Form.Label>Select Nutrient</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Search for nutrient...\" value={searchTerm} onChange={handleNutrientSearch} />\n        </Form.Group>\n\n        {selectedNutrient && (\n          <Table striped bordered hover className=\"mt-3\">\n            <thead>\n              <tr>\n                <th>Nutrient Name</th>\n                <th>Amount</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredNutrients.map((nutrient, index) => (\n                <tr key={index}>\n                  <td>{nutrient.name}</td>\n                  <td>\n                    <Form.Control\n                      type=\"text\"\n                      size=\"sm\"\n                      placeholder=\"Enter amount\"\n                      value={nutrient.amount || ''}\n                      onChange={(e) => {\n                        const updatedNutrients = [...nutrients];\n                        updatedNutrients[index].amount = e.target.value;\n                        setNutrients(updatedNutrients);\n                      }}\n                    />\n                  </td>\n                  <td>\n                    <Button variant=\"link\" onClick={() => handleRemoveNutrient(index)}>\n                      <Badge pill bg=\"danger\">\n                        X\n                      </Badge>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n              <tr>\n                <td>{selectedNutrient}</td>\n                <td>\n                  <Form.Control\n                    type=\"text\"\n                    size=\"sm\"\n                    placeholder=\"Enter amount\"\n                    value={nutrientAmount}\n                    onChange={(e) => setNutrientAmount(e.target.value)}\n                  />\n                </td>\n                <td>\n                  <Button variant=\"link\" onClick={handleAddNutrient}>\n                    Add\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </Table>\n        )}\n\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\n          Save Food\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddCustomFood;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}