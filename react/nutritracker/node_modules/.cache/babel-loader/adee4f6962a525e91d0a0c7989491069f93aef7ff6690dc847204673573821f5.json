{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/search/FoodDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodDetails = ({\n  foodItem,\n  onAdd\n}) => {\n  _s();\n  const [servingSize, setServingSize] = useState(100);\n  const [servingType, setServingType] = useState('g');\n  const handleAdd = () => {\n    onAdd({\n      ...foodItem,\n      servingSize,\n      servingType,\n      calories: foodItem.calories / foodItem.servingSize * servingSize\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-3\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: foodItem.food_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Serving Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              value: servingSize,\n              onChange: e => setServingSize(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Serving Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: servingType,\n              onChange: e => setServingType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"g\",\n                children: \"g\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ml\",\n                children: \"ml\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"piece\",\n                children: \"piece\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleAdd,\n          children: \"Add to Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(FoodDetails, \"udrl/npw+CKrmX3jFXJa9jnEkx0=\");\n_c = FoodDetails;\nexport default FoodDetails;\nvar _c;\n$RefreshReg$(_c, \"FoodDetails\");","map":{"version":3,"names":["React","useState","Card","Form","Button","Col","jsxDEV","_jsxDEV","FoodDetails","foodItem","onAdd","_s","servingSize","setServingSize","servingType","setServingType","handleAdd","calories","className","children","Body","Title","food_name","fileName","_jsxFileName","lineNumber","columnNumber","Row","Group","as","Label","Control","type","value","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/search/FoodDetails.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Form, Button, Col } from 'react-bootstrap';\n\nconst FoodDetails = ({ foodItem, onAdd }) => {\n    const [servingSize, setServingSize] = useState(100);\n    const [servingType, setServingType] = useState('g');\n\n    const handleAdd = () => {\n        onAdd({\n            ...foodItem,\n            servingSize,\n            servingType,\n            calories: (foodItem.calories / foodItem.servingSize) * servingSize,\n        });\n    };\n\n    return (\n        <Card className=\"mb-3\">\n            <Card.Body>\n                <Card.Title>{foodItem.food_name}</Card.Title>\n                <Form>\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Serving Size</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                value={servingSize}\n                                onChange={(e) => setServingSize(e.target.value)}\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col}>\n                            <Form.Label>Serving Type</Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                value={servingType}\n                                onChange={(e) => setServingType(e.target.value)}\n                            >\n                                <option value=\"g\">g</option>\n                                <option value=\"ml\">ml</option>\n                                <option value=\"piece\">piece</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                    <Button variant=\"success\" onClick={handleAdd}>Add to Log</Button>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default FoodDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}