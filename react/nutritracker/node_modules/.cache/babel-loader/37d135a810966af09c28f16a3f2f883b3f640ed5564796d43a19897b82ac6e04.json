{"ast":null,"code":"var _jsxFileName = \"/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nexport const TokenProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  // const [csrfToken, setCsrfToken] = useState('');\n\n  // useEffect(() => {\n  //   axios.get('http://localhost:8080/api/csrf/getCsrfToken').then(response => {\n  //     setCsrfToken(response.data.token);\n  //     console.log(\"csrf->\",response)\n  //   });\n  // }, []);\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    setToken(null);\n  };\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.post('http://localhost:8080/login', new URLSearchParams({\n        username: userName,\n        password: password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        // const userIdResponse = await axios.get('http://localhost:8080/api/user', {\n        //   params:{\n        //     userName: userName\n        //   },\n        //   headers: {\n        //     Authorization: newToken\n        //   }\n        // });\n        // console.log(\"User response ->\",userIdResponse)\n        // setUserId(userIdResponse.data)\n        setUserId(response.data.userId);\n        setToken(newToken);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n      newToken = null;\n    }\n    return newToken;\n  };\n  const searchByFoodName = async foodName => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/search', {\n        params: {\n          foodName: foodName\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('search failed:', error);\n      return 0;\n    }\n  };\n  const getFoodNutritionDetails = async food => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/searchFoodNutrientById', {\n        params: {\n          fdcId: food.fdcId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting details failed:', error);\n      return 0;\n    }\n  };\n  const logFoodNutritionDetails = async logEntry => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/dailyIntake/create', logEntry, {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n  const getNutritionLogByDate = async date => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/dailyIntake', {\n        params: {\n          userId: userId,\n          date: date\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting nutrition log details failed:', error);\n      return 0;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      login,\n      isLoggedIn,\n      setIsLoggedIn,\n      logout,\n      searchByFoodName,\n      getFoodNutritionDetails,\n      userId,\n      logFoodNutritionDetails,\n      getNutritionLogByDate\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"T9jCLC1GApzA5kYXhvpGGLnOrMk=\");\n_c = TokenProvider;\nexport default TokenContext;\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","TokenContext","TokenProvider","children","_s","isLoggedIn","setIsLoggedIn","token","setToken","userId","setUserId","logout","login","userName","password","newToken","window","btoa","response","post","URLSearchParams","username","headers","console","log","status","data","error","searchByFoodName","foodName","get","params","Authorization","getFoodNutritionDetails","food","fdcId","logFoodNutritionDetails","logEntry","getNutritionLogByDate","date","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhanu/Documents/nutritracker_react/nutritracker/src/components/TokenContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TokenContext = createContext();\n\nexport const TokenProvider = ({ children }) => {\n  const [isLoggedIn,setIsLoggedIn]=useState(false)\n  const [token, setToken] = useState(null);\n  const [userId,setUserId]=useState(null);\n  // const [csrfToken, setCsrfToken] = useState('');\n\n  // useEffect(() => {\n  //   axios.get('http://localhost:8080/api/csrf/getCsrfToken').then(response => {\n  //     setCsrfToken(response.data.token);\n  //     console.log(\"csrf->\",response)\n  //   });\n  // }, []);\n\n\n  const logout=() =>{\n    setIsLoggedIn(false)\n    setToken(null)\n  }\n\n  const login = async (userName, password) => {\n    let newToken = \"Basic \" + window.btoa(userName + ':' + password);\n    try {\n      const response = await axios.post('http://localhost:8080/login', new URLSearchParams({\n        username: userName,\n        password: password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log('response', response);\n      if (response.status === 200) {\n        // const userIdResponse = await axios.get('http://localhost:8080/api/user', {\n        //   params:{\n        //     userName: userName\n        //   },\n        //   headers: {\n        //     Authorization: newToken\n        //   }\n        // });\n        // console.log(\"User response ->\",userIdResponse)\n        // setUserId(userIdResponse.data)\n        setUserId(response.data.userId)\n        setToken(newToken);\n        setIsLoggedIn(true);\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      setToken(null); // Clear token if login fails\n      newToken=null\n    }\n    return newToken;\n  };\n\n  const searchByFoodName = async (foodName) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/search', {\n        params: {\n          foodName: foodName\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('search failed:', error);\n      return 0;\n    }\n  };\n\n  const getFoodNutritionDetails = async (food) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/foods/searchFoodNutrientById', {\n        params: {\n          fdcId: food.fdcId\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting details failed:', error);\n      return 0;\n    }\n  };\n\n  const logFoodNutritionDetails = async (logEntry) => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/dailyIntake/create',\n        logEntry\n      , {\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('logging food nutrition failed:', error);\n      return 0;\n    }\n  };\n\n\n  const getNutritionLogByDate = async (date) => {\n    try {\n      const response = await axios.get('http://localhost:8080/api/dailyIntake', {\n        params: {\n          userId: userId,\n          date:date\n        },\n        headers: {\n          Authorization: token\n        }\n      });\n      console.log('response -> data -> ', response.data);\n      if (response.status === 200) {\n        return response;\n      }\n    } catch (error) {\n      console.error('getting nutrition log details failed:', error);\n      return 0;\n    }\n  };\n\n  return (\n    <TokenContext.Provider value={{token, login, isLoggedIn, setIsLoggedIn, logout, searchByFoodName, getFoodNutritionDetails, userId, logFoodNutritionDetails, getNutritionLogByDate }}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n\nexport default TokenContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}